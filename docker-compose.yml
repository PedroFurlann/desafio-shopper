version: '3.9'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "postgresql://postgres:password@db:5432/shopper-database?schema=public"
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "npx prisma generate && npx prisma migrate deploy && npm run start:dev"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:5173"
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules

  db:
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shopper-database
      PGDATA: /data/postgres
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d shopper-database'"]
      interval: 5s
      timeout: 10s
      retries: 3
    volumes:
      - ./data/pg:/data/postgres
